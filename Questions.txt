1, 派生类的对象如何引用该派生类特有的函数而不是基类的同名函数（已经使用虚函数）。（已解决）

2，new怎么用？复制的时候，什么情况下是复制对象的指针，什么情况下是额外开辟一块地址另存数据？是否需要手动删除？
（new后面必须根一个指定的类，如Shape* A = new Shape。但如果要用A来承接Shape的派生类(如Trialgle类）的话，该怎么办？如何避免slicing？）
3，object和class究竟在内存里是怎么存的？
4，指向函数的指针是什么？
5，引用和指针的区别？
Shape *B = &c;
Shape A = *B;

这种情况下，等号传递了B的指针还是引用？

*a = &b
这种情况下指针和引用的关系怎么理解？

6，析构函数是否适合在本项目中"状态消失时对目标造成影响"这种背景下使用？
7，当前设想的使用全局变量容器的方式来保存技能、状态、初始角色能力，然后复制它们进行使用。这样的设计是否合理？
如何实现将效果"赋予"给角色？即从效果列表处深拷贝后，在避免slicing的情况下把该效果添加到角色的状态vector中。
8，当前项目的文件没有层次，看起来很散漫。一般c++工程的文件系统是什么样的？

